[{"/home/radhika/project/src/index.js":"1","/home/radhika/project/src/App.js":"2","/home/radhika/project/src/reportWebVitals.js":"3","/home/radhika/project/src/NavBar.js":"4","/home/radhika/project/src/Playlist.js":"5","/home/radhika/project/src/PlaylistTracks.js":"6","/home/radhika/project/src/AlbumTracks.js":"7","/home/radhika/project/src/Login.js":"8","/home/radhika/project/src/Rdirect.js":"9","/home/radhika/project/src/ArtistTracks.js":"10","/home/radhika/project/src/Artist.js":"11","/home/radhika/project/src/Album.js":"12","/home/radhika/project/src/SpotifyLogin.js":"13","/home/radhika/project/src/Home.js":"14","/home/radhika/project/src/Profile.js":"15","/home/radhika/project/src/Quiz.js":"16","/home/radhika/project/src/DimensionsProvider.js":"17","/home/radhika/project/src/SoundfontProvider.js":"18"},{"size":547,"mtime":1610416900546,"results":"19","hashOfConfig":"20"},{"size":1567,"mtime":1617591470728,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1607144941305,"results":"22","hashOfConfig":"20"},{"size":1257,"mtime":1617711593809,"results":"23","hashOfConfig":"20"},{"size":2078,"mtime":1617711629710,"results":"24","hashOfConfig":"20"},{"size":1557,"mtime":1617441287971,"results":"25","hashOfConfig":"20"},{"size":1450,"mtime":1617591446086,"results":"26","hashOfConfig":"20"},{"size":1061,"mtime":1617711587229,"results":"27","hashOfConfig":"20"},{"size":845,"mtime":1617356114094,"results":"28","hashOfConfig":"20"},{"size":1467,"mtime":1617591551401,"results":"29","hashOfConfig":"20"},{"size":3982,"mtime":1617710964383,"results":"30","hashOfConfig":"20"},{"size":3686,"mtime":1617591444210,"results":"31","hashOfConfig":"20"},{"size":1268,"mtime":1617591603961,"results":"32","hashOfConfig":"20"},{"size":2547,"mtime":1617711562621,"results":"33","hashOfConfig":"20"},{"size":9493,"mtime":1617711635922,"results":"34","hashOfConfig":"20"},{"size":15312,"mtime":1617711648542,"results":"35","hashOfConfig":"20"},{"size":341,"mtime":1611025969088,"results":"36","hashOfConfig":"20"},{"size":2911,"mtime":1617711845950,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1xzec9a",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/radhika/project/src/index.js",[],["80","81"],"/home/radhika/project/src/App.js",[],"/home/radhika/project/src/reportWebVitals.js",[],"/home/radhika/project/src/NavBar.js",[],"/home/radhika/project/src/Playlist.js",["82"],"/home/radhika/project/src/PlaylistTracks.js",["83"],"import React from \"react\"\nimport Spotify from 'spotify-web-api-js';\nimport ls from 'local-storage';\nimport Quiz from \"./Quiz\";\nconst SpotifyWebApi = new Spotify();\nconst AT = ls.get('accessToken');\nvar userID = ls.get('userID');\nclass PlaylistTracks extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            playlistID: this.props.match.params.id,\n            songs: [],\n            displayResult: false\n        }\n    }\n    componentDidMount() {\n        SpotifyWebApi.setAccessToken(AT);\n        this.getSongs();\n    }\n    getSongs() {\n        SpotifyWebApi.getPlaylistTracks(userID, this.state.playlistID)\n            .then((response) => {\n                response.items.map((item) => {\n                    this.setState({\n                        songs: [...this.state.songs,\n                        {\n                            id: item.track.id,\n                            name: item.track.name,\n                        }\n                        ],\n                    })\n                })\n                this.setState({\n                    displayResult: true,\n                })\n            });\n\n    }\n    render() {\n        return (\n            <div>\n                {this.state.displayResult ?\n                    <div>\n                        {ls.set('quizType', 'Playlist')}\n                        <Quiz arr={this.state.songs} quizID={this.state.pid} />\n                    </div>\n                    : null\n                }\n            </div>\n        )\n    }\n}\nexport default PlaylistTracks;","/home/radhika/project/src/AlbumTracks.js",["84"],"import React from \"react\"\nimport Spotify from 'spotify-web-api-js';\nimport ls from 'local-storage';\nimport Quiz from \"./Quiz\";\nconst SpotifyWebApi = new Spotify();\nconst AT = ls.get('accessToken');\nclass AlbumTracks extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            listId: this.props.match.params.id,\n            songs: [],\n            displayResult: false\n\n        }\n    }\n    componentDidMount() {\n        SpotifyWebApi.setAccessToken(AT);\n        this.getSongs();\n    }\n    getSongs() {\n        SpotifyWebApi.getAlbumTracks(this.state.listId)\n            .then((response) => {\n                response.items.map((item) => {\n                    this.setState({\n                        songs: [...this.state.songs,\n                        {\n                            id: item.id,\n                        }\n                        ],\n                    })\n                })\n                this.setState({\n                    displayResult: true\n                })\n            });\n    }\n    render() {\n        return (\n            <div>\n                {this.state.displayResult ?\n                    <div>\n                        {ls.set('quizType', 'Album Tracks')}\n                        <Quiz arr={this.state.songs} quizID={this.state.listId} />\n                    </div>\n                    : null\n                }\n            </div>\n        )\n    }\n}\nexport default AlbumTracks;","/home/radhika/project/src/Login.js",[],"/home/radhika/project/src/Rdirect.js",["85"],"import React from \"react\"\nimport Spotify from 'spotify-web-api-js';\nimport ls from 'local-storage';\nimport Home from \"./Home\";\n\nls.set('isLoggedIn',true);\nconst SpotifyWebApi = new Spotify();\nclass Rdirect extends React.Component{\n    constructor(){\n        super();\n        const params = this.getHashParams();\n        if(params.access_token){\n            SpotifyWebApi.setAccessToken(params.access_token)\n        }\n        ls.set('accessToken', params.access_token);\n    }\n    getHashParams() {\n        var hashParams = {};\n        var e, r = /([^&;=]+)=?([^&;]*)/g,\n            q = window.location.hash.substring(1);\n        while ( e = r.exec(q)) {\n           hashParams[e[1]] = decodeURIComponent(e[2]);\n        }\n        return hashParams;\n    }\n    render(){\n        return(\n            <Home />\n        )\n    }\n}\nexport default Rdirect;\n","/home/radhika/project/src/ArtistTracks.js",["86"],"import React from \"react\"\nimport Spotify from 'spotify-web-api-js';\nimport ls from 'local-storage';\nimport Quiz from \"./Quiz\";\nconst SpotifyWebApi = new Spotify();\nconst AT = ls.get('accessToken');\nclass ArtistTracks extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            listId: this.props.match.params.id,\n            songs: [],\n            displayResult: false\n        }\n    }\n    componentDidMount() {\n        SpotifyWebApi.setAccessToken(AT);\n        this.getSongs();\n    }\n    getSongs() {\n        SpotifyWebApi.getArtistTopTracks(this.state.listId, \"IN\")\n            .then((response) => {\n                response.tracks.map((item) => {\n                    this.setState({\n                        songs: [...this.state.songs,\n                        {\n                            id: item.id,\n                        }\n                        ],\n                    })\n                })\n                this.setState({\n                    displayResult: true\n                })\n            });\n    }\n    render() {\n        return (\n            <div>\n                {this.state.displayResult ?\n                    <div>\n                        {ls.set('quizType', 'Artist Top Tracks')}\n                        <Quiz arr={this.state.songs} quizID={this.state.listId} />\n                    </div>\n                    : null\n                }\n            </div>\n        )\n    }\n}\nexport default ArtistTracks;","/home/radhika/project/src/Artist.js",["87","88","89"],"/home/radhika/project/src/Album.js",["90","91"],"import React from \"react\";\nimport Spotify from 'spotify-web-api-js';\nimport { Link } from \"react-router-dom\";\nimport ls from 'local-storage';\nimport { Button, Form, Row, Col, Container } from \"react-bootstrap\";\nimport \"./App.css\"\nconst AT = ls.get('accessToken');\n\nconst SpotifyWebApi = new Spotify();\n\nclass Album extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: '',\n            list: [],\n            displayResult: false,\n        }\n    }\n    componentDidMount() {\n        SpotifyWebApi.setAccessToken(AT);\n    }\n    getAlbum() {\n        SpotifyWebApi.searchAlbums(this.state.query, { limit: 12 })\n            .then((response) => {\n                response.albums.items.map((item) => {\n                    this.setState({\n                        list: [...this.state.list,\n                        {\n                            id: item.id,\n                            name: item.name,\n                            image: item.images[0].url\n                        }\n                        ],\n                    })\n                })\n                this.setState({\n                    displayResult: true,\n                })\n            })\n\n    }\n    keyPress(e) {\n        if (e.key === 'Enter') {\n            this.getAlbum();\n            e.preventDefault();\n        }\n    }\n    handleChange(event) {\n        const key = event.target.name;\n        const value = event.target.value;\n        this.setState({ [key]: value });\n    }\n    render() {\n        return (\n            <div >\n                <br />\n                <Container>\n                    <Row>\n                        <Col>\n                            <Form.Group>\n                                <Form.Control size=\"lg\" type=\"text\" name=\"query\" placeholder=\"Search Album\" onKeyDown={this.keyPress.bind(this)} onChange={this.handleChange.bind(this)} />\n                                <Row className=\" mt-2\">\n                                    <Col style={{ textAlign: \"center\" }}>\n                                        <Button style={{ width: 150 }} variant=\"dark\" size=\"lg\" onClick={this.getAlbum.bind(this)}> Search</Button>{' '}\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                </Container>\n                <Container>\n                    {this.state.displayResult ?\n                        <div>\n                            {this.state.list.map((item) => {\n                                return (\n                                    <Link style={{ textDecoration: 'inherit' }} to={{ pathname: `/albumTracks/${item.id}`, val: this.state.val }}  >\n                                        <Row className=\"dispItems\" xs={1} md={2} >\n                                            <Col style={{ textAlign: \"center\" }}>\n                                                <img src={item.image} height=\"200\" width=\"200\" alt=\"Album-Image\" />\n                                            </Col>\n                                            <Col style={{ textDecoration: 'inherit', color: \"black\" }} className=\"d-flex justify-content-center align-items-center d-inline-block\">\n                                                {item.name}\n                                            </Col>\n                                        </Row>\n                                    </Link>\n                                )\n                            })}\n                        </div>\n                        : null\n                    }\n                </Container>\n            </div>\n        )\n    }\n}\nexport default Album;","/home/radhika/project/src/SpotifyLogin.js",[],"/home/radhika/project/src/Home.js",[],"/home/radhika/project/src/Profile.js",["92","93"],"/home/radhika/project/src/Quiz.js",["94"],"/home/radhika/project/src/DimensionsProvider.js",[],"/home/radhika/project/src/SoundfontProvider.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":22,"column":43,"nodeType":"101","messageId":"102","endLine":22,"endColumn":45},{"ruleId":"99","severity":1,"message":"100","line":24,"column":43,"nodeType":"101","messageId":"102","endLine":24,"endColumn":45},{"ruleId":"99","severity":1,"message":"100","line":24,"column":43,"nodeType":"101","messageId":"102","endLine":24,"endColumn":45},{"ruleId":"103","severity":1,"message":"104","line":21,"column":17,"nodeType":"105","messageId":"106","endLine":21,"endColumn":30},{"ruleId":"99","severity":1,"message":"100","line":23,"column":44,"nodeType":"101","messageId":"102","endLine":23,"endColumn":46},{"ruleId":"107","severity":1,"message":"108","line":25,"column":17,"nodeType":"109","endLine":25,"endColumn":32},{"ruleId":"99","severity":1,"message":"100","line":26,"column":51,"nodeType":"101","messageId":"102","endLine":26,"endColumn":53},{"ruleId":"110","severity":1,"message":"111","line":85,"column":49,"nodeType":"112","endLine":85,"endColumn":117},{"ruleId":"99","severity":1,"message":"100","line":26,"column":50,"nodeType":"101","messageId":"102","endLine":26,"endColumn":52},{"ruleId":"110","severity":1,"message":"111","line":80,"column":49,"nodeType":"112","endLine":80,"endColumn":116},{"ruleId":"99","severity":1,"message":"100","line":36,"column":42,"nodeType":"101","messageId":"102","endLine":36,"endColumn":44},{"ruleId":"99","severity":1,"message":"100","line":86,"column":43,"nodeType":"101","messageId":"102","endLine":86,"endColumn":45},{"ruleId":"99","severity":1,"message":"100","line":96,"column":35,"nodeType":"101","messageId":"102","endLine":96,"endColumn":37},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]